// Code generated by mockery v1.1.0. DO NOT EDIT.

package client

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
	session "gitlab.com/gitlab-org/ci-cd/custom-executor-drivers/fargate/executors/ssh/internal/session"
)

// MockClient is an autogenerated mock type for the Client type
type MockClient struct {
	mock.Mock
}

// Disconnect provides a mock function with given fields:
func (_m *MockClient) Disconnect() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewSession provides a mock function with given fields: stdout, stderr
func (_m *MockClient) NewSession(stdout io.Writer, stderr io.Writer) (session.Session, error) {
	ret := _m.Called(stdout, stderr)

	var r0 session.Session
	if rf, ok := ret.Get(0).(func(io.Writer, io.Writer) session.Session); ok {
		r0 = rf(stdout, stderr)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(session.Session)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(io.Writer, io.Writer) error); ok {
		r1 = rf(stdout, stderr)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
